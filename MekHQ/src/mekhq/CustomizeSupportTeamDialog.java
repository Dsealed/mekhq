/*
 * NewTeamDialog.java
 * 
 * Copyright (c) 2009 Jay Lawson <jaylawson39 at yahoo.com>. All rights reserved.
 * 
 * This file is part of MekHQ.
 * 
 * MekHQ is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * MekHQ is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with MekHQ.  If not, see <http://www.gnu.org/licenses/>.
 */

package mekhq;

import java.awt.Frame;
import java.text.SimpleDateFormat;
import java.util.GregorianCalendar;

import mekhq.campaign.personnel.Person;
import mekhq.campaign.personnel.SupportPerson;
import mekhq.campaign.team.MedicalTeam;
import mekhq.campaign.team.SupportTeam;
import javax.swing.DefaultComboBoxModel;
import mekhq.campaign.Campaign;
import mekhq.campaign.team.TechTeam;

/**
 *
 * @author  Taharqa
 */
public class CustomizeSupportTeamDialog extends javax.swing.JDialog {
	private static final long serialVersionUID = -8038099101234445018L;
	private Campaign campaign;
    private MekHQView hqView;
    private SupportPerson person;
    private boolean newHire;
    private GregorianCalendar birthdate;
    private SimpleDateFormat dateFormat;
    private Frame frame;
    
    /** Creates new form NewTeamDialog */
    public CustomizeSupportTeamDialog(java.awt.Frame parent, boolean modal, SupportPerson person, boolean hire, Campaign campaign, MekHQView view) {
        super(parent, modal);
        this.frame = parent;
        this.campaign = campaign;
        this.dateFormat = new SimpleDateFormat("MMMM d yyyy");
        this.hqView = view;
        this.person = person;
        this.newHire = hire;       
        refreshPerson();
    }

    private void refreshPerson() {	
    	this.birthdate = (GregorianCalendar)person.getBirthday().clone();
    	getContentPane().removeAll();
    	initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
    	 java.awt.GridBagConstraints gridBagConstraints;

        txtTeamName = new javax.swing.JTextField();
        chTeamRating = new javax.swing.JComboBox();
        lblTeamName = new javax.swing.JLabel();
        lblTeamRating = new javax.swing.JLabel();
        btnHire = new javax.swing.JButton();
        btnClose = new javax.swing.JButton();
        lblTeamType = new javax.swing.JLabel();
        chTeamType = new javax.swing.JComboBox();
        lblGender = new javax.swing.JLabel();
        lblBday = new javax.swing.JLabel();
        btnDate = new javax.swing.JButton();
        choiceGender = new javax.swing.JComboBox();
        btnRandomName = new javax.swing.JButton();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("Form"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(mekhq.MekHQApp.class).getContext().getResourceMap(CustomizeSupportTeamDialog.class);
        getContentPane().setLayout(new java.awt.GridBagLayout());
        
        lblTeamName.setText(resourceMap.getString("lblTeamName.text")); // NOI18N
        lblTeamName.setName("lblTeamName"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblTeamName, gridBagConstraints);
        
        txtTeamName.setText(person.getName());
        //txtTeamName.setText(resourceMap.getString("txtTeamName.text")); // NOI18N
        txtTeamName.setName("txtTeamName"); // NOI18N
        txtTeamName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTeamNameActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(txtTeamName, gridBagConstraints);
 
        btnRandomName.setText(resourceMap.getString("btnRandomName.text")); // NOI18N
        btnRandomName.setName("btnRandomName"); // NOI18N
        btnRandomName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	randomName();
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        getContentPane().add(btnRandomName, gridBagConstraints);
        
        lblGender.setText(resourceMap.getString("lblGender.text")); // NOI18N
        lblGender.setName("lblGender"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblGender, gridBagConstraints);
        
        DefaultComboBoxModel genderModel = new DefaultComboBoxModel();
        genderModel.addElement(Person.getGenderName(Person.G_MALE));
        genderModel.addElement(Person.getGenderName(Person.G_FEMALE));
        choiceGender.setModel(genderModel);
        choiceGender.setName("choiceGender"); // NOI18N
        choiceGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	if(isNewHire()) {
            		randomName();
            	}
            }
        });
        choiceGender.setSelectedIndex(person.getGender());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(choiceGender, gridBagConstraints);
 
        lblBday.setText(resourceMap.getString("lblBday.text")); // NOI18N
        lblBday.setName("lblBday"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblBday, gridBagConstraints);
 
        btnDate.setText(getDateAsString());
        btnDate.setName("btnDate"); // NOI18N
        btnDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
            	btnDateActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnDate, gridBagConstraints);

        lblTeamRating.setText(resourceMap.getString("lblTeamRating.text")); // NOI18N
        lblTeamRating.setName("lblTeamRating"); // NOI18N
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(lblTeamRating, gridBagConstraints);
          
        DefaultComboBoxModel teamRatingModel = new DefaultComboBoxModel();
        for(int i = 0; i < SupportTeam.EXP_NUM; i++) {
            teamRatingModel.addElement(SupportTeam.getRatingName(i));
        }
        chTeamRating.setModel(teamRatingModel);
        chTeamRating.setName("chTeamRating"); // NOI18N
        chTeamRating.setSelectedIndex(person.getTeam().getRating());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(chTeamRating, gridBagConstraints);
     
        DefaultComboBoxModel teamTypeModel = new DefaultComboBoxModel();
        for(int i = 0; i < TechTeam.T_NUM; i++) {
            teamTypeModel.addElement(TechTeam.getTypeDesc(i));
        }
        chTeamType.setModel(teamTypeModel);
        chTeamType.setName("chTeamType"); // NOI18N
        chTeamType.setSelectedIndex(0);
        if(person.getType() != Person.T_DOCTOR) {
        	lblTeamType.setText(resourceMap.getString("lblTeamType.text")); // NOI18N
            lblTeamType.setName("lblTeamType"); // NOI18N
            gridBagConstraints = new java.awt.GridBagConstraints();
            gridBagConstraints.gridx = 0;
            gridBagConstraints.gridy = 4;
            gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
            gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
            getContentPane().add(lblTeamType, gridBagConstraints);
            	        
            chTeamType.setSelectedIndex(((TechTeam)person.getTeam()).getType());
	        gridBagConstraints = new java.awt.GridBagConstraints();
	        gridBagConstraints.gridx = 1;
	        gridBagConstraints.gridy = 4;
	        gridBagConstraints.gridwidth = 3;
	        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
	        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
	        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
	        getContentPane().add(chTeamType, gridBagConstraints);
        }
	 
        if(isNewHire()) {
        	btnHire.setText(resourceMap.getString("btnHire.text")); // NOI18N
        } else {
        	btnHire.setText(resourceMap.getString("btnOK.text")); // NOI18N
        }
        btnHire.setName("btnHire"); // NOI18N
        btnHire.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHireActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.CENTER;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnHire, gridBagConstraints);

        btnClose.setText(resourceMap.getString("btnClose.text")); // NOI18N
        btnClose.setName("btnClose"); // NOI18N
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.CENTER;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 0);
        getContentPane().add(btnClose, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private boolean isNewHire() {
    	return newHire;
    }
    
private void btnHireActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHireActionPerformed
    int rating = chTeamRating.getSelectedIndex();
    int type = chTeamType.getSelectedIndex();
    String name = txtTeamName.getText();
    if(isNewHire()) {
    	SupportTeam team = new MedicalTeam(name, rating);;
    	if(person.getType() != Person.T_DOCTOR) {   		
    		team = new TechTeam(name, rating, type);
    	}	
    	person.setTeam(team);
    	campaign.addPerson(person);
    	if(person.getType() == Person.T_DOCTOR) {
    		person = campaign.newDoctorPerson();
    	} else {
    		person = campaign.newTechPerson(TechTeam.T_MECH);
    	}
    	refreshPerson();
    	hqView.refreshPersonnelList();
    	hqView.refreshTechsList();
    	hqView.refreshPatientList();
    	hqView.refreshReport();
    } else {
    	SupportTeam team = (SupportTeam)person.getTeam();
    	team.setRating(rating);    	
    	team.setName(name);
    	if(person.getType() != Person.T_DOCTOR && team instanceof TechTeam) {   	
    		((TechTeam)team).setType(type);
    	}
    	person.setType(person.getTypeBy(team));
    	hqView.refreshPersonnelList();
    	hqView.refreshTechsList();
    	hqView.refreshPatientList();
    	setVisible(false);
    }
}//GEN-LAST:event_btnHireActionPerformed

private void txtTeamNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTeamNameActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtTeamNameActionPerformed

private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
    this.setVisible(false);
}//GEN-LAST:event_btnCloseActionPerformed

	private String getDateAsString() {
		return dateFormat.format(birthdate.getTime());
	}

	private void btnDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDateActionPerformed
		// show the date chooser
		DateChooser dc = new DateChooser(frame, birthdate);
		// user can eiter choose a date or cancel by closing
		if (dc.showDateChooser() == DateChooser.OK_OPTION) {
			birthdate = dc.getDate();
			btnDate.setText(getDateAsString());
		}
	}
	
	private void randomName() {
		txtTeamName.setText(campaign.getRNG().generate(choiceGender.getSelectedIndex() == Person.G_FEMALE));
	}


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                CustomizeSupportTeamDialog dialog = new CustomizeSupportTeamDialog(new javax.swing.JFrame(), true, null, false, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    private javax.swing.JButton btnHire;
    private javax.swing.JButton btnRandomName;
    private javax.swing.JComboBox chTeamRating;
    private javax.swing.JComboBox chTeamType;
    private javax.swing.JLabel lblTeamName;
    private javax.swing.JLabel lblTeamRating;
    private javax.swing.JLabel lblTeamType;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblBday;
    private javax.swing.JTextField txtTeamName;
    private javax.swing.JButton btnDate;
    private javax.swing.JComboBox choiceGender;

    // End of variables declaration//GEN-END:variables

}
