<?xml version="1.0"?>
<!-- Author: Jay Lawson -->
<!-- This is my attempt at developing a new build file for MegaMek        -->
<!-- The goals of this new build file are as follows                      -->
<!-- 1) Produce four packages with each release                           -->
<!--     a) An OS X bundled release using jarbundler                      -->
<!--     b) A Windows release with the EXE file                           -->
<!--     c) A linux release with the startup.sh file                      -->
<!--     d) A source-file only release to comply with GPL                 -->
<!-- 2) Reduce the amount of folders and files in each release to make it -->
<!--    more intuitive for the user                                       -->
    
<!-- This is all experimental, don't use it yet! -->    

<project default="release" name="MekHQ" basedir=".">

	<!-- Global properties for this build -->

	<property name="srcdir" value="src" />
	<property name="confdir" value="mmconf" />
	<property name="logdir" value="logs" />
	<property name="builddir" value="classes" />
	<property name="libdir" value="lib" />
	<property name="datadir" value="data" />
	<property name="apidocsdir" value="apidocs" />
	<property name="docdir" value="docs" />
	<property name="svndir" value="svndev" />
	<property name="util" value="packaging_utils" />
	
	<!-- Version and packaging properties -->
	<property name="project.name" value="mekhq" />
	
	<!-- same as builddir but under svn -->
	<property name="svnbuilddir" value="${svndir}/${builddir}" />

	<!-- svnroot used for svn authentification -->
	<property name="svnroot" value="svn://svn.code.sf.net/p/mekhq/code/MekHQ" />

	<property name="timestampfile" value="${logdir}/timestamp" />
	<property name="TinyXMLsrc" value="TinyXML07-src.zip" />

	<!-- Name of the target jarfile and the class containing the main-Method -->
	<property name="jarfile" value="MekHQ.jar" />
	<property name="jarmainclass" value="mekhq.MekHQ" />

	<!-- This is the relative path to the 'data' directory -->
	<property name="dataclasspath" value="." />

	<!-- Build the list of the lib/*.jar files to be included in the "Class-Path" attribute of the jar's manifest dynamically.  -->
	<!--
	<pathconvert pathsep=" " property="jarclasspath">
		<path>
			<fileset dir="lib/">
				<include name="*.jar" />
			</fileset>
		</path>
		<mapper>
			<chainedmapper>
				<flattenmapper />
				<globmapper from="*" to="lib/*" />
			</chainedmapper>
		</mapper>
	</pathconvert>
	-->
	
	<condition property="isOsUnixLike">
		<os family="unix" />
	</condition>

	<condition property="isOsWindows">
		<os family="windows" />
	</condition>
	
	<condition property="isOsMac">
			<os family="mac" />
		</condition>
	
	<taskdef name="jarbundler" classname="net.sourceforge.jarbundler.JarBundler" classpath="${util}/jarbundler-2.1.0.jar"/>
	<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${util}/launch4j/launch4j.jar:${util}/launch4j/lib/xstream.jar" />

	<target name="svndev-init">
		<tstamp />
		<delete dir="${svndir}" />
		<input message="Please enter version number (eg. 0.34.0):" addproperty="version"/>
		<property name="osxdist" value="${project.name}-${version}-mac" />
		<property name="windist" value="${project.name}-${version}-windows" />
		<property name="nixdist" value="${project.name}-${version}" />
	</target>
	
	<!-- following svndev-* tasks get, build & package the current version from svn -->
	<target name="svndev-get" depends="svndev-init" description="get the latest source from SVN">
		<exec executable="svn">
			<arg line="export ${svnroot} ${svndir}" />
		</exec>
	</target>
	
	<target name="svndev-build" depends="svndev-get" description="compile project from SVN and generate JAR file" >
			<mkdir dir="${svnbuilddir}" />
			<!-- compile -->
			<echo message="MekHQ" />
			<javac debug="true" debuglevel="lines,source" target="1.5" source="1.5" destdir="${svnbuilddir}" srcdir="${svndir}/${srcdir}" memoryInitialSize="512m" memoryMaximumSize="512m" fork="true">
				<classpath>
					<pathelement location="${svndir}" />
					<fileset dir="${svndir}/${libdir}" includes="*.jar" />
					<fileset dir="${svndir}" includes="MegaMek.jar" />
					<fileset dir="${svndir}" includes="MegaMekLab.jar" />
				</classpath>			
			</javac>

			<!-- jar -->
			<jar basedir="${svnbuilddir}" jarfile="${svndir}/${jarfile}" manifest="manifest.txt">
				<fileset dir="${svndir}/${srcdir}" includes="**/*.properties"/>
			</jar>

			<!-- Ensure that the log directory exists. -->
			<mkdir dir="${svndir}/${logdir}" />
			<touch file="${svndir}/${timestampfile}" />	
		</target>
			
		<target name="svndev-clean" description="remove the SVN build directory">
			<delete dir="${svnbuilddir}" />
		</target>
	
	<target name="mac-bundle" description="Bundle the project built from SVN into an Mac OSX distribution">
		<mkdir dir="${osxdist}" />
		<copy todir="${osxdist}">
			<fileset dir="${svndir}" >
				<include name="${jarfile}" />
				<include name="${libdir}/*.jar" />
				<include name="${logdir}/" />
				<include name="${datadir}/" />
				<include name="${docdir}/" />
				<include name="${confdir}/" />
				<include name="campaigns/" />
				<include name="campaigns/FoxsTeeth.cpnx" />
				<include name="MegaMek.jar" />
				<include name="MegaMekLab.jar" />
				<include name="README.txt" />
				<include name="SubmitBug.html" />
				<include name="license.txt" />
			</fileset>
		</copy>
		<mkdir dir="${osxdist}/MegaMek.app" />
		<copy todir="${osxdist}/MegaMek.app">
			<fileset dir="${util}/MegaMek.app" >
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy file="${util}/JavaApplicationStub" todir="${osxdist}/MegaMek.app/Contents/MacOS/"/>
		<move file="${osxdist}/MegaMek.jar" todir="${osxdist}/MegaMek.app/Contents/Resources/Java/" />
		<mkdir dir="${osxdist}/MegaMekLab.app" />
		<copy todir="${osxdist}/MegaMekLab.app">
			<fileset dir="${util}/MegaMekLab.app" >
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy file="${util}/JavaApplicationStub" todir="${osxdist}/MegaMekLab.app/Contents/MacOS/"/>
		<move file="${osxdist}/MegaMekLab.jar" todir="${osxdist}/MegaMekLab.app/Contents/Resources/Java/" />
		<mkdir dir="${osxdist}/MekHQ.app" />
		<copy todir="${osxdist}/MekHQ.app">
			<fileset dir="${util}/MekHQ.app" >
				<include name="**/*"/>
			</fileset>
		</copy>
		<copy file="${util}/JavaApplicationStub" todir="${osxdist}/MekHQ.app/Contents/MacOS/"/>
		<move file="${osxdist}/MekHQ.jar" todir="${osxdist}/MekHQ.app/Contents/Resources/Java/" />
	</target>
	
	<!-- I think this will only work on OS X systems -->
	<target name="mac-dmg" if="isOsMac" description="Create a dmg file from the OS X distribution (NOTE: only works on OSX)">
		<delete file="${osxdist}/MekHQ.app/Contents/MacOS/JavaApplicationStub" />
		<exec executable="ln">
			<arg line="-s /System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub" />
			<arg value="${osxdist}/MekHQ.app/Contents/MacOS/JavaApplicationStub" />
		</exec>
		<delete file="${osxdist}/MegaMek.app/Contents/MacOS/JavaApplicationStub" />
		<exec executable="ln">
					<arg line="-s /System/Library/Frameworks/JavaVM.framework/Resources/MacOS/JavaApplicationStub" />
					<arg value="${osxdist}/MegaMek.app/Contents/MacOS/JavaApplicationStub" />
		</exec>
		<exec executable="hdiutil">
			<arg line="create -srcfolder ${osxdist} ${osxdist}.dmg -volname mekhq-dev-svn-mac-${DSTAMP}"/>
		</exec>
	</target>
	
	<target name="mac-tar" depends="mac-dmg,mac-zip" description="Create a compressed tar file of the OS X distribution"/>
	
	<target name="mac-zip">
	    <tar destfile="${osxdist}.tar.bz2" compression="bzip2">
	    	<tarfileset dir="${osxdist}" mode="755" />
	    </tar>
	</target>
	
	
	<target name="mac-clean">
		<delete dir="${osxdist}" />
	</target>
	
	<target name="mac-package" depends="mac-bundle, mac-zip, mac-clean" description="Package a Mac OS X distribution of the project built from SVN" />
	
	<target name="nix-bundle" description="Bundle the project built from SVN into a unix distribution">
		<mkdir dir="${nixdist}" />
		<copy todir="${nixdist}">
								<fileset dir="${svndir}" >
								<include name="${jarfile}" />
								<include name="${libdir}/*.jar" />
								<include name="${logdir}/" />
								<include name="${datadir}/" />
								<include name="${docdir}/" />
								<include name="${confdir}/" />
								<include name="campaigns/" />
								<include name="campaigns/FoxsTeeth.cpnx" />
								<include name="MegaMek.jar" />
								<include name="MegaMekLab.jar" />
								<include name="README.txt" />
								<include name="SubmitBug.html" />
								<include name="license.txt" />
							</fileset>
						</copy>
	</target>
	
	<target name="nix-tar" description="Create a compressed tar file of the unix distribution">
		<tar destfile="${nixdist}.tar.gz" basedir="${nixdist}" compression="gzip" />
	</target>
	
	<target name="nix-clean">
		<delete dir="${nixdist}" />
	</target>
		
	<target name="nix-package" depends="nix-bundle, nix-tar, nix-clean" description="Package a Unix distribution of the project built from SVN"/>
	
	<!-- Produce an EXE file -->
	<target name="exe" description="Generate an EXE wrapper for MegaMek.jar">
		<delete file="${svndir}/MekHQ.exe"/>
		<launch4j configFile="${util}/mekhq.4j.xml" />	 
	</target>
	
	<target name="win-bundle" depends="exe" description="Bundle the project built from SVN into a Windows distribution">
		<mkdir dir="${windist}" />
		<copy todir="${windist}">
							<fileset dir="${svndir}" >
								<include name="${jarfile}" />
								<include name="${libdir}/*.jar" />
								<include name="${logdir}/" />
								<include name="${datadir}/" />
								<include name="${docdir}/" />
								<include name="${confdir}/" />
								<include name="campaigns/" />
								<include name="campaigns/FoxsTeeth.cpnx" />
								<include name="MegaMek.jar" />
								<include name="MegaMekLab.jar" />
								<include name="MekHQ.exe" />
								<include name="README.txt" />
								<include name="SubmitBug.html" />
								<include name="license.txt" />
							</fileset>
						</copy>
		<copy file="${util}/mekhq.l4j.ini" todir="${windist}"/>
	</target>
	
	<target name="win-zip" description="Create a zipfile of the Windows distribution">
		<zip zipfile="${basedir}/${windist}.zip" basedir="${windist}"  />
	</target>
		
	<target name="win-clean">
		<delete dir="${windist}" />
	</target>
			
	<target name="win-package" depends="win-bundle, win-zip, win-clean" description="Package a Windows distribution of the project built from SVN"/>
	
	<target name="source-package" description="Package a source-only distribution of the project built from SVN">
		<tar destfile="${project.name}-${version}-source.tar.gz" basedir="${svndir}" compression="gzip">
			<exclude name="${builddir}/**"/>
			<exclude name="MekHQ.jar"/>
			<exclude name="MekHQ.exe"/>
		</tar>
	</target>
	
	<target name="release" depends="svndev-build, mac-package, nix-package, win-package, source-package, svndev-clean" description="Build the project from SVN and package it as Windows, Mac, Unix, and source-only" />
	
</project>
